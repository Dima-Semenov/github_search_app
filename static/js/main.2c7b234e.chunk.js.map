{"version":3,"sources":["api.jsx","Components/UserList/CurrentUser/CurrentUser.jsx","Components/UserList/Loader/Loader.jsx","Components/UserList/UserList/UserList.jsx","Components/UserList/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["getUserRepo","user","url","fetch","headers","Accept","authorization","then","response","ok","json","status","statusText","CurrentUser","name","description","language","html_url","className","href","target","rel","Loader","UserList","repos","length","map","repo","id","Header","App","useState","query","setQuery","appliedQuery","setAppliedQuery","setRepos","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","serchValue","setSearchValue","isError","setIsError","applyQuery","useCallback","debounce","useEffect","result","includes","prevState","type","placeholder","onChange","event","slice","onClick","Math","random","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c7b234e.chunk.js","sourcesContent":["const MAIN_URL = 'https://api.github.com';\n\nconst request = (url) => {\n  return fetch(`${MAIN_URL}${url}`, {\n    headers: {\n      \"User-Agent\": \"search_github_users\",\n      Accept: \"application/vnd.github.v3+json\",\n      authorization: \"token b65a6a9aacece6ca479d5c1072ebbc621705a538\",\n    }\n  })\n  .then(response => {\n    if (response.ok) {\n\n      return response.json();\n    }\n\n    // eslint-disable-next-line no-throw-literal\n    throw `${response.status} - ${response.statusText}`\n  });\n};\n\nexport function getUserRepo(user) {\n  return request(`/users/${user}/repos`);\n}","import React from 'react';\nimport '../CurrentUser/currentUser.scss';\n\nexport const CurrentUser = ({\n  name,\n  description,\n  language,\n  html_url,\n}) => {\n\n  return (\n    <div className=\"user\">\n      <div className=\"user__info\">\n        <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\n          <h3 className=\"user__title\">{name}</h3>\n        </a>\n        <p>\n          Language:\n          {' '}\n          {language || \"No language selected\"}\n        </p>\n        <p>\n          Description:\n          {' '}\n          {description || \"User has no description\"}\n        </p>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport '../Loader/loader.scss';\n\nexport const Loader = () => (\n  <div className=\"lds-ellipsis\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);","import React from 'react';\nimport { CurrentUser } from '../CurrentUser/CurrentUser';\nimport { Loader } from '../Loader/Loader';\n\nexport const UserList = ({ repos }) => {\n  return (\n    <>\n      {repos.length === 0 ? (\n        <Loader />\n       ) : (\n        <>\n          {repos.map(repo => (\n            <CurrentUser key={repo.id} {...repo} />\n          ))}\n        </>\n      )\n      }\n    </>\n  );\n}\n","import React from 'react';\nimport '../Header/header.scss'\n\nexport const Header = () => (\n  <header className=\"header\">\n    <div className=\"header__logo\">\n      <h1>requestum</h1>\n      <p>web development company</p>\n    </div>\n    <div>\n      <h4 className=\"header__title\">Github users search app</h4>\n    </div>\n  </header>\n);","import React, { useCallback, useEffect, useState } from 'react';\nimport { getUserRepo } from './api';\nimport './App.scss';\nimport { debounce } from 'lodash';\nimport { UserList } from './Components/UserList/UserList/UserList';\nimport { Header } from './Components/UserList/Header/Header';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [repos, setRepos] = useState([]);\n  const [serchValue, setSearchValue] = useLocalStorage('history', []);\n  const [isError, setIsError] = useState(false);\n\n  const applyQuery = useCallback (\n    debounce(setAppliedQuery, 1000),\n    [appliedQuery]\n  );\n\n  useEffect(() => {\n    if (appliedQuery) {\n      getUserRepo(appliedQuery)\n        .then(result => {\n          if (result.length === 0) {\n            setIsError(true)\n          } else {\n            setIsError(false)\n            setRepos(result)\n          }\n        });\n\n        if (!serchValue.includes(appliedQuery)) {\n          setSearchValue(prevState => [appliedQuery, ...prevState])\n        }\n\n    }\n  }, [appliedQuery]);\n\n  useEffect(() => {\n    if (!query) {\n      setRepos([])\n    }\n  }, [query])\n\n  const handleChange = (event) => {\n    setIsError(false)\n    setRepos([])\n    setQuery(event.target.value)\n    applyQuery(event.target.value)\n  }\n\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"app__container\">\n        <div className=\"app__searcher\">\n          <input\n            type=\"text\"\n            className={`app__input ${isError ? 'error' : ''}`}\n            placeholder=\"Enter user name\"\n            value={query}\n            onChange={handleChange}\n          />\n\n          {isError && (<p>No matches found</p>)}\n\n          <p className=\"app__history\">\n            <span className=\"app__history-title\">Search history:</span>\n            {serchValue.slice(0, 5).map(value => (\n              <p key={Math.random()} className=\"app__history-text\" onClick={() => {\n                setRepos([])\n                setAppliedQuery(value)\n                setQuery(value)\n              }}>{value}</p>\n            ))}\n          </p>\n        </div>\n\n        <div className=\"app__content\">\n          {query ? (\n            <UserList repos={repos} />\n            ) : (\n            <p className=\"app__unselect\">No user select</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}